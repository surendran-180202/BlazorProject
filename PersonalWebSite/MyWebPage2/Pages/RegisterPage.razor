<div class="@PopUpRegister">
    <div class="form-popup">
        <button type="button" class="cancelbtn" @onclick="closePopUpsignIn"><i class="fa fa-plus-circle" style="transform: rotate(45deg);color:lightcoral;"></i></button>
        
        <div class="form-container">
            <h4>Register</h4>
            <input type="text" placeholder="Enter Your Name" @bind="AddUser.USERNAME">
            <input type="text" placeholder="Enter Your Email" @bind="AddUser.EMAIL">
            <input type="text" placeholder="Enter Your Phone Number" @bind="AddUser.PHONE">
            <input type="password" placeholder="enter your password" @bind="AddUser.PASSWORD">
            <input type="@passwordClass" placeholder="Conform password" @bind="ConformPassword">
            <i class="far fa-eye" style=" cursor: pointer;margin-left:90%;" @onclick="show_password"></i>
            <center>
                <input type="submit" value="submit" @onclick="NewUser">
            </center>
        </div>



    </div>
</div>


@code {
    tblUser AddUser = new tblUser();
    private string? ConformPassword { get; set; }
    private string? passwordClass { get; set; }
    [Parameter]
    public string? PopUpRegister { get; set; } 

    protected override void OnInitialized()
    {
        if(PopUpRegister == null) PopUpRegister = "RegisterPagePopUpHide";
        passwordClass = "password";
    }
    private void show_password()
    {
        if(passwordClass == "password") passwordClass = "text";
        else passwordClass = "password";
    }
    private void NewUser()
    {
        if(AddUser.PASSWORD.Equals(ConformPassword) && Validation.EmailValidation(AddUser.EMAIL)) 
        {
            userService.Create(AddUser);
        }
    }
    private void closePopUpsignIn()
    {
        PopUpRegister = "RegisterPagePopUpHide";
        //uriHelper.NavigateTo($"/RegisterPopUp/RegisterPagePopUpHide");
        uriHelper.NavigateTo("/");
    }

}
